#!/usr/local/bin/python3
# -*- coding: UTF-8 -*-

from __future__ import print_function
import getopt, sys, os

ENC_HEAD = bytearray("Created by Ministone Co., Ltd. All rights reserved.", encoding='utf8')
ENC_HEAD_LEN = len(ENC_HEAD)

ENC_KEY = [0x75, 0xe4, 0x87, 0x17, 0xde, 0x68, 0x72, 0x5c, 0xb9, 0xc5, 0x95, 0x75,
           0xd5, 0x36, 0x23, 0x9f, 0x45, 0xf7, 0x7c, 0xe8, 0xcf, 0xd3, 0xfb, 0xfc,
           0x2c, 0xf6, 0xad, 0x01, 0xb3, 0xb4, 0xb0, 0xf7, 0xf7, 0x70, 0x05, 0xa8,
           0x4c, 0x94, 0x72, 0xfd, 0xd1, 0x06, 0xab, 0xaf, 0x11, 0x81, 0x0a, 0xdc,
           0xd5, 0x18, 0xeb, 0x74, 0xe7, 0x68, 0x36, 0x61, 0x1e, 0x97, 0x1f, 0x38,
           0x16, 0x7a, 0x85, 0xbb, 0xa2, 0x70, 0xae, 0x8a, 0x1b, 0x9c, 0xb9, 0x58,
           0x5b, 0x25, 0xa4, 0xff, 0xc5, 0x17, 0x13, 0xc0, 0xb5, 0x79, 0x79, 0x7f,
           0x23, 0xf1, 0xf9, 0xe4, 0x87, 0x79, 0x2d, 0x81, 0x1a, 0xc7, 0xfe, 0x5d,
           0xa6, 0xd1, 0x89, 0x2f, 0x3a, 0x09, 0x25, 0x31, 0xf4, 0x6e, 0x20, 0xf5,
           0xe6, 0x65, 0x48, 0x74, 0xaa, 0x5c, 0xe1, 0xc2, 0x91, 0xa1, 0x85, 0x50,
           0x32, 0x86, 0x64, 0xd8, 0x6e, 0xce, 0xa2, 0x80, 0xce, 0xc8, 0xf8, 0xcb,
           0x87, 0xd7, 0xaa, 0x95, 0xb7, 0x8a, 0x1d, 0xe5, 0xf0, 0xc5, 0x28, 0xf9,
           0x46, 0xaa, 0x40, 0x5b, 0xa7, 0x98, 0xd0, 0xa8, 0xaa, 0x38, 0x58, 0xf3,
           0xda, 0x8f, 0x1a, 0x6f, 0x6f, 0x07, 0xa9, 0x18, 0x21, 0x4f, 0xfe, 0x26,
           0x02, 0x86, 0xec, 0x1a, 0x5e, 0x57, 0xc4, 0x59, 0xd4, 0x1e, 0xc5, 0xaa,
           0x94, 0xa0, 0x97, 0xe1, 0x3f, 0x2c, 0x2f, 0x98, 0xd2, 0x80, 0xd2, 0xf3,
           0x6c, 0x5a, 0x44, 0x8b, 0xd6, 0x48, 0xd8, 0x76, 0xff, 0x49, 0x8c, 0x51,
           0x04, 0xaa, 0x1d, 0x91, 0x07, 0x24, 0x37, 0xc1, 0x5e, 0xc9, 0x9f, 0x04,
           0x61, 0x3f, 0x73, 0x07, 0xde, 0xc0, 0xa5, 0x03, 0x0c, 0x88, 0x33, 0xd7,
           0xc2, 0x5e, 0xd3, 0x60, 0xc3, 0xaf, 0x12, 0xf0, 0xd2, 0xab, 0x24, 0xf4,
           0x7d, 0x71, 0xa1, 0x10, 0x7a, 0x45, 0x8c, 0xb0, 0xba, 0x9b, 0x9a, 0xb4,
           0xc0, 0xbc, 0x33, 0x54, 0x9b, 0xd5, 0xf5, 0x76, 0x19, 0x7a, 0x79, 0x2b,
           0xb9, 0x1a, 0xf5, 0x06, 0xcb, 0xc7, 0x61, 0x51, 0x7c, 0xf1, 0x35, 0xb4,
           0x65, 0x4b, 0x06, 0x07, 0xcf, 0xad, 0x6f, 0xb5, 0x46, 0x04, 0xdd, 0xce,
           0x68, 0x4a, 0x9c, 0x33, 0xf6, 0xa8, 0x13, 0x6d, 0x88, 0xa7, 0xe3, 0x13,
           0x68, 0x2e, 0x85, 0xf5, 0xd2, 0x21, 0xbd, 0x0f, 0x13, 0x75, 0x72, 0xed,
           0xad, 0x08, 0x63, 0x5e, 0x40, 0xef, 0x4f, 0x19, 0x42, 0x15, 0xec, 0xf8,
           0xd2, 0xbe, 0xc7, 0x2f, 0x7e, 0x5e, 0x50, 0x9e, 0x4b, 0xf3, 0xa5, 0x22,
           0x62, 0x06, 0x4f, 0xc1, 0x59, 0x76, 0xb1, 0x42, 0xca, 0x52, 0x20, 0x21,
           0xab, 0x97, 0x55, 0x9f, 0x41, 0xdf, 0x4d, 0x10, 0x06, 0x9b, 0xd6, 0xa6,
           0xab, 0xcc, 0xc6, 0xb8, 0xa4, 0x8b, 0x36, 0xb4, 0x6a, 0x78, 0x18, 0x59,
           0xe0, 0xbd, 0xe9, 0x54, 0x58, 0x6f, 0x7b, 0xd1, 0xf4, 0x02, 0x5b, 0x15,
           0xde, 0x9f, 0xa1, 0x18, 0xde, 0x8d, 0x9a, 0x9a, 0xe8, 0xfe, 0xea, 0xae,
           0x3d, 0x86, 0x4b, 0xc9, 0x01, 0x61, 0x54, 0x53, 0x04, 0xe0, 0xee, 0x78,
           0x29, 0xbf, 0x86, 0x56, 0x09, 0xf0, 0x5f, 0x02, 0xdd, 0xec, 0xcf, 0x93,
           0x86, 0xaa, 0xdf, 0x59, 0x83, 0x29, 0x15, 0x00, 0xd2, 0xe9, 0x92, 0x98,
           0x38, 0xeb, 0x20, 0xb0, 0x29, 0x79, 0xdd, 0xa7, 0xfe, 0x42, 0xb9, 0xc1,
           0x3c, 0xbb, 0xb8, 0x0b, 0x85, 0x83, 0xdf, 0x38, 0x4f, 0x4f, 0xf9, 0xc6,
           0xa9, 0x2b, 0xc8, 0xe1, 0xb9, 0x9c, 0x45, 0xaa, 0x12, 0x75, 0x80, 0x2e,
           0xd6, 0x60, 0x0e, 0x4a, 0x20, 0x49, 0x50, 0x9c, 0x4a, 0xcd, 0xe9, 0x39,
           0x10, 0xb1, 0x42, 0x9c, 0x89, 0xeb, 0x49, 0xfc, 0x7a, 0xac, 0x85, 0xd3,
           0x1b, 0x86, 0x74, 0x53, 0x0f, 0xef, 0x3e, 0xb8, 0x8d, 0xe5, 0xc2, 0xaa,
           0xde, 0x78, 0xc7, 0x73, 0x28, 0x7c, 0x2d, 0x33, 0x20, 0x04, 0x0b, 0x2d,
           0x0b, 0x45, 0x9c, 0x5e, 0x01, 0xf0, 0x3a, 0x76, 0x09, 0x11, 0xe7, 0xee,
           0x7b, 0xc2, 0x5a, 0xb9, 0xe1, 0x72, 0xe3, 0xb3, 0x2d, 0x98, 0xde, 0x51,
           0x4d, 0x49, 0x0b, 0xd8, 0x48, 0x6e, 0x1f, 0x63, 0xe7, 0x45, 0x62, 0xf0,
           0xa1, 0x8d, 0xa3, 0xcb, 0x95, 0x02, 0xf4, 0xcf, 0xc7, 0x0d, 0x3a, 0x16,
           0x51, 0x46, 0x80, 0xdc, 0x9e, 0x9f, 0x06, 0x1c, 0xd9, 0x86, 0x54, 0xe6,
           0x30, 0xce, 0xab, 0xc7, 0x53, 0x59, 0x35, 0xa9, 0xa1, 0xa8, 0xbb, 0xff,
           0x97, 0x9f, 0xa4, 0x9c, 0x6b, 0xf9, 0xc3, 0xf9, 0x06, 0x3e, 0x26, 0xcd,
           0xd0, 0x79, 0xc1, 0x3f, 0x33, 0x92, 0xa7, 0x13, 0x6b, 0x7d, 0x54, 0xa0,
           0x39, 0x52, 0xf0, 0xfd, 0xf9, 0x4a, 0x3a, 0xb3, 0xb3, 0x17, 0x3b, 0xf4,
           0x4b, 0x6c, 0x60, 0xdd, 0xb7, 0x41, 0x2d, 0xab, 0x5c, 0x94, 0x98, 0xf0,
           0x11, 0x34, 0x5a, 0xe3, 0xab, 0x3d, 0x61, 0x10, 0x3e, 0x39, 0xfe, 0x2b,
           0x24, 0x19, 0x2f, 0xe3, 0xb9, 0x72, 0x39, 0xce, 0x44, 0x30, 0x33, 0x90,
           0xaf, 0x7e, 0x25, 0x20, 0x98, 0xdc, 0xbc, 0xd0, 0x1b, 0x7c, 0x99, 0xb2,
           0x5f, 0x2b, 0x2d, 0x5b, 0xb5, 0x82, 0x64, 0x44, 0x68, 0x0e, 0x57, 0x11,
           0x82, 0x98, 0xac, 0xa5, 0x8b, 0x7c, 0x49, 0xb7, 0xa5, 0x2f, 0x6f, 0x6a,
           0x99, 0xab, 0x86, 0xcb, 0x31, 0x04, 0x66, 0x74, 0x9a, 0xf0, 0x7e, 0x42,
           0x84, 0x15, 0x13, 0x77, 0x50, 0xa8, 0x8f, 0x0d, 0xfa, 0x12, 0x1b, 0x38,
           0xcc, 0x88, 0x43, 0x80, 0x76, 0x22, 0x81, 0x15, 0xf1, 0x6b, 0x7d, 0x18,
           0x00, 0x5f, 0xf8, 0x77, 0xe0, 0x07, 0x86, 0xe5, 0xb8, 0x65, 0x2c, 0x69,
           0x3c, 0xf2, 0x67, 0xfe, 0xa8, 0x49, 0xa5, 0xf3, 0x95, 0x3c, 0xab, 0xbf,
           0x67, 0xc6, 0x82, 0xaf, 0xe2, 0x3f, 0x93, 0x5d, 0x94, 0x15, 0x0f, 0x96,
           0x87, 0x29, 0x4d, 0xee, 0xec, 0x7d, 0x3c, 0xe7, 0x12, 0x28, 0xe4, 0x2b,
           0x21, 0x5e, 0x2f, 0xf0, 0x07, 0x5f, 0x23, 0xaa, 0x88, 0xe0, 0xd1, 0x5c,
           0x0a, 0x91, 0x94, 0x8d, 0x76, 0x0e, 0x7c, 0x90, 0x54, 0x80, 0xd9, 0x13,
           0xdd, 0x1a, 0x03, 0x3a, 0x1f, 0x60, 0xf2, 0xe2, 0x19, 0x8a, 0x7d, 0x4c,
           0xba, 0x16, 0x85, 0x0a, 0x84, 0x65, 0x24, 0xc9, 0x45, 0x36, 0x9f, 0xc1,
           0xd8, 0xfc, 0x3d, 0x14, 0xf3, 0x44, 0x88, 0x6d, 0xcd, 0x44, 0x20, 0x50,
           0x80, 0xf4, 0xf9, 0xba, 0x6d, 0x4d, 0x54, 0xa2, 0xd5, 0x1b, 0x07, 0x99,
           0xaa, 0x75, 0xd8, 0x20, 0x90, 0xa4, 0x98, 0xa5, 0x4f, 0xc3, 0x39, 0x3b,
           0x98, 0xd7, 0xa1, 0x91, 0x5d, 0x25, 0x88, 0xaf, 0xb6, 0x3d, 0xde, 0x5a,
           0xe0, 0xfe, 0xa3, 0x82, 0x75, 0xf8, 0x91, 0x38, 0x74, 0xa7, 0x3e, 0xb5,
           0x9a, 0x2b, 0xe6, 0xc2, 0x08, 0x1f, 0x37, 0x11, 0xd2, 0x00, 0x6c, 0xa1,
           0x46, 0x9e, 0x9d, 0xaf, 0x2f, 0xed, 0xa4, 0x9f, 0xf7, 0x74, 0x7b, 0xea,
           0xfa, 0xe4, 0x8e, 0x96, 0x6a, 0x29, 0x4e, 0x5d, 0xe3, 0x60, 0xd6, 0x56]
ENC_KEY_LEN = len(ENC_KEY)


def print_usage():
    print("python3 %s <输入文件> [-o] <输出文件>" % sys.argv[0])
    print("-o: 指定输出文件路径，如果未指定则将覆盖原始文件")


def process_buff(buf):
    buflen = len(buf)
    retBuf = bytearray(buflen)
    j = 0
    for i in range(len(buf)):
        retBuf[i] = buf[i] ^ ENC_KEY[j]
        j += 1
        if j == ENC_KEY_LEN:
            j = 0
    return retBuf


def is_ecnrypt(buf):
    isEnc = True
    for i in range(ENC_HEAD_LEN):
        if buf[i] != ENC_HEAD[i]:
            isEnc = False
    return isEnc


def process_file(infile, outfile):
    inFile = open(infile, "rb")
    inBuf = bytearray(inFile.read())
    isEnc = is_ecnrypt(inBuf)
    outBuf = None
    if isEnc:
        outBuf = process_buff(inBuf[ENC_HEAD_LEN:])
    else:
        outBuf = ENC_HEAD + process_buff(inBuf)

    outFile = None
    if outfile:
        outFile = open(outfile, "wb")
    if outFile:
        outFile.write(outBuf)
        outFile.close()
        print("结果已经输出至文件: %s" % outfile)

    if isEnc:
        print("解密内容:")
        print(outBuf.decode("utf-8"))
    inFile.close()


def main():
    if len(sys.argv) < 2:
        print_usage()
        sys.exit(1)

    inFilePath = sys.argv[1]
    outFilePath = None

    try:
        opts, args = getopt.getopt(sys.argv[2:], "ho:", ["help", "output="])
        for o, a in opts:
            if o in ("-o", "--output"):
                outFilePath = a
            elif o in ("-h", "--help"):
                print_usage()
                sys.exit(0)

    except getopt.GetoptError as err:
        # print help information and exit:
        print(err)  # will print something like "option -a not recognized"
        print_usage()
        sys.exit(2)

    if outFilePath == None:
        outFilePath = inFilePath

    if os.path.isdir(inFilePath):
        file_list = os.listdir(inFilePath)
        for file in file_list:
            process_file(os.path.join(inFilePath, file), os.path.join(outFilePath, file))
    else:
        process_file(inFilePath, outFilePath)


if __name__ == "__main__":
    main()
